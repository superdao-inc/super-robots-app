{
	"name": "superdao-backend",
	"private": true,
	"scripts": {
		"ts-node": "ts-node -r tsconfig-paths/register --project tsconfig.json",
		"ts-node-dev": "ts-node-dev --respawn --transpile-only --ignore-watch=dist -r tsconfig-paths/register --project tsconfig.json",
		"dev": "cross-env DISABLE_NEXT_HANDLER=true PORT=7999 FORCE_COLOR=1 pnpm ts-node-dev src/server",
		"dev:inspect": "cross-env DISABLE_NEXT_HANDLER=true PORT=7999 pnpm ts-node-dev --inspect=4321 src/server",
		"dev:workerRewardMint": "pnpm ts-node-dev src/rewardMintWorker",
		"dev:workerErc721Mint": "pnpm ts-node-dev src/erc721MintWorker",
		"dev:workerRobotImageGeneration": "pnpm ts-node-dev src/robotImageGenerationWorker",
		"dev:workerRobotImageBrokerGeneration": "pnpm ts-node-dev src/robotImageGenerationBrokerWorker",
		"dev:workerTokenUpdateMint": "pnpm ts-node-dev src/tokenUpdateWorker",
		"dev:campaignReportStartWorker": "pnpm ts-node-dev src/campaignReportStartWorker",
		"build": "NODE_OPTIONS=--max_old_space_size=4096 tsc --project tsconfig.prod.json && tscpaths --project tsconfig.prod.json -s src -o dist",
		"build:analyze": "ANALYZE=true next build",
		"dist:start:app": "NODE_ENV=production node -r elastic-apm-node/start dist/server.js",
		"dist:start:workerRewardMint": "node -r elastic-apm-node/start dist/rewardMintWorker.js",
		"dist:start:workerErc721Mint": "node -r elastic-apm-node/start dist/erc721MintWorker.js",
		"dist:start:workerRobotImageGeneration": "node -r elastic-apm-node/start dist/robotImageGenerationWorker.js",
		"dist:start:workerRobotImageBrokerGeneration": "node -r elastic-apm-node/start dist/robotImageGenerationBrokerWorker.js",
		"dist:start:workerTokenUpdateMint": "node -r elastic-apm-node/start dist/tokenUpdateWorker.js",
		"dist:start:campaignReportStartWorker": "node -r elastic-apm-node/start dist/campaignReportStartWorker.js",
		"dist:typeorm": "node ./node_modules/typeorm/cli.js --dataSource ./dist/utils/distCliDataSource.js",
		"dist:typeorm:migrate": "pnpm dist:typeorm migration:run",
		"lint": "eslint --cache --quiet \"src/**/*.{js,ts,tsx}\"",
		"test": "jest",
		"test:ci": "jest --ci --reporters=default --reporters=jest-junit --passWithNoTests --runInBand",
		"typeorm": "pnpm ts-node ./node_modules/typeorm/cli.js --dataSource src/utils/cliDataSource.ts",
		"typecheck": "tsc --noEmit",
		"generate": "pnpm typeorm migration:generate",
		"generate:lint": "pnpm ts-node scripts/generateMigration.ts",
		"create": "pnpm typeorm migration:create",
		"migrate": "pnpm typeorm migration:run",
		"revert": "pnpm typeorm migration:revert",
		"deploy": "pnpm ts-node configs/deploy.ts",
		"email:sendTestTopUpGaslessWallet": "pnpm ts-node scripts/sendTestTopUpGaslessWalletEmail.ts",
		"email:sentTestWhitelistEmailClaim": "pnpm ts-node scripts/sentTestWhitelistEmailClaim.ts",
		"email:mjml": "ts-node --project tsconfig.server.json -r tsconfig-paths/register scripts/showEmailMjml.ts",
		"user:bootstrap": "pnpm ts-node scripts/bootstrapDevUser.ts",
		"daoMembers:bootstrap": "pnpm ts-node scripts/addMembersToDao.ts",
		"daosWithRandom:bootstrap": "pnpm ts-node scripts/daosWithRandom.ts",
		"graph:ens:schema": "npx graphql-inspector introspect https://api.thegraph.com/subgraphs/name/ensdomains/ens --write schema.ens-domain.gql",
		"generate:forbiddenSlugs": "pnpm ts-node src/utils/forbiddenSlugs/generate.ts",
		"sync:wallet-nfts": "pnpm ts-node scripts/syncExistingWalletsWithNftMicroservice.ts",
		"sync:whitelist-nft-collections": "pnpm ts-node scripts/syncWhitelistNftCollections.ts",
		"sync:wallet-transactions": "pnpm ts-node scripts/syncExistingWalletsWithTransactionsMicroservice.ts",
		"the-graph-polygon:stage:schema": "npx get-graphql-schema https://graph.superdao.dev/subgraphs/name/superdao-polygon-stage > src/services/the-graph/graph-polygon/schemas/schema.the-graph-stage.gql",
		"the-graph-polygon:prod:schema": "npx get-graphql-schema https://graph.superdao.dev/subgraphs/name/superdao-polygon-prod > src/services/the-graph/graph-polygon/schemas/schema.the-graph-prod.gql",
		"script:babyRobot:updateMetadata": "pnpm ts-node scripts/updateBabyRobotsMetadata.ts",
		"script:codegen-scoring-api": "pnpm ts-node scripts/codegenScoringApi.ts",
		"script:fillRobotsLayers": "pnpm ts-node scripts/fillRobotsLayers.ts",
		"codegen:graph-robots:schema": "npx get-graphql-schema https://api.thegraph.com/subgraphs/name/krokoyr/test_robots > src/services/the-graph/robots/schemas/schema.robots.gql"
	},
	"dependencies": {
		"@achingbrain/node-fetch": "2.6.7",
		"@apollo/client": "3.6.9",
		"@bmatei/apollo-prometheus-exporter": "2.1.1",
		"@dev/nestjs-common": "2.1.1",
		"@ethersproject/abi": "5.7.0",
		"@ethersproject/providers": "5.7.1",
		"@gnosis.pm/safe-core-sdk": "2.4.1",
		"@gnosis.pm/safe-core-sdk-types": "1.6.1",
		"@gnosis.pm/safe-ethers-lib": "1.6.1",
		"@gnosis.pm/safe-service-client": "1.1.2",
		"@google-cloud/storage": "6.9.4",
		"@liaoliaots/nestjs-redis": "9.0.2",
		"@magic-sdk/admin": "1.4.1",
		"@metamask/detect-provider": "1.2.0",
		"@nestjs/apollo": "10.1.0",
		"@nestjs/axios": "0.1.0",
		"@nestjs/common": "9.1.2",
		"@nestjs/config": "2.2.0",
		"@nestjs/core": "9.1.2",
		"@nestjs/graphql": "10.1.2",
		"@nestjs/jwt": "9.0.0",
		"@nestjs/microservices": "9.1.2",
		"@nestjs/platform-express": "9.1.2",
		"@nestjs/platform-socket.io": "9.1.2",
		"@nestjs/schedule": "2.1.0",
		"@nestjs/typeorm": "9.0.1",
		"@nestjs/websockets": "9.1.2",
		"@sd/superdao-shared": "workspace:*",
		"@socket.io/redis-adapter": "7.2.0",
		"@socket.io/redis-emitter": "4.1.1",
		"@swc-node/register": "1.5.2",
		"@swc/core": "1.3.9",
		"@types/amqplib": "0.8.2",
		"@types/cookie-session": "2.0.44",
		"@types/cron": "2.0.0",
		"@types/express": "4.17.14",
		"@types/glob": "8.0.0",
		"@types/graphql-depth-limit": "1.1.3",
		"@types/jest": "29.0.3",
		"@types/lodash": "4.14.185",
		"@types/mjml": "4.7.0",
		"@types/node": "16.11.11",
		"@types/node-fetch": "2.6.2",
		"@types/node-schedule": "1.3.2",
		"@types/sha256": "0.2.0",
		"@types/ua-parser-js": "0.7.36",
		"@types/uuid": "8.3.4",
		"@types/validator": "13.7.7",
		"@types/yargs": "17.0.13",
		"@uniswap/default-token-list": "3.2.0",
		"@uploadcare/upload-client": "2.2.0",
		"@viaprotocol/router-sdk": "1.0.7",
		"@willsoto/nestjs-prometheus": "4.7.0",
		"amqplib": "0.8.0",
		"amqp-connection-manager": "4.1.13",
		"apollo-datasource-rest": "3.7.0",
		"apollo-server": "3.10.2",
		"apollo-server-core": "3.10.2",
		"apollo-server-plugin-base": "3.6.2",
		"axios": "0.27.2",
		"bignumber.js": "9.1.0",
		"camelcase-keys": "7.0.2",
		"class-transformer": "0.5.1",
		"class-validator": "0.13.2",
		"cockatiel": "3.0.0",
		"cookie-session": "2.0.0",
		"cron": "2.1.0",
		"cross-fetch": "3.1.5",
		"dotenv": "11.0.0",
		"elastic-apm-node": "3.38.0",
		"envalid": "7.3.1",
		"ethers": "5.7.1",
		"express": "4.18.1",
		"form-data": "4.0.0",
		"fp-ts": "2.13.1",
		"graphql": "15.8.0",
		"graphql-depth-limit": "1.1.0",
		"graphql-request": "5.0.0",
		"graphql-tag": "2.12.6",
		"hasha": "5.2.2",
		"ioredis": "5.2.3",
		"ipfs-http-client": "56.0.3",
		"kafkajs": "2.2.2",
		"lodash": "4.17.21",
		"mailgun.js": "4.2.3",
		"merkletreejs": "0.2.32",
		"mjml": "4.13.0",
		"moralis": "1.5.5",
		"nanoid": "3.3.4",
		"node-fetch": "2.6.9",
		"p-limit": "3.1.0",
		"pg": "8.8.0",
		"prom-client": "14.1.0",
		"qs": "6.11.0",
		"react": "18.2.0",
		"reflect-metadata": "0.1.13",
		"rxjs": "7.5.5",
		"sharp": "0.32.0",
		"sha256": "0.2.0",
		"socket.io": "4.5.2",
		"socket.io-client": "4.5.3",
		"swagger-typescript-api": "12.0.3",
		"tscpaths": "0.0.9",
		"typeorm": "0.3.10",
		"typescript": "4.5.2",
		"ua-parser-js": "1.0.34",
		"unleash-client": "3.15.0",
		"uuid": "8.3.2",
		"validator": "13.7.0",
		"yargs": "17.5.1",
		"zod": "3.19.1"
	},
	"devDependencies": {
		"@jest/globals": "29.0.3",
		"@nestjs/cli": "9.1.3",
		"@nestjs/schematics": "9.0.3",
		"@nestjs/testing": "9.1.4",
		"@sd/eslint-config-superdao": "workspace:*",
		"cross-env": "7.0.3",
		"csv-writer": "1.6.0",
		"csvtojson": "2.0.10",
		"eslint": "8.24.0",
		"glob": "8.0.3",
		"jest": "29.0.3",
		"jest-junit": "14.0.1",
		"ts-jest": "29.0.3",
		"ts-node": "10.9.1",
		"ts-node-dev": "1.1.8"
	}
}
